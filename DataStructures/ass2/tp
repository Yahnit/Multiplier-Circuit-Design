long long int b[10000][2];

void merging(long long int a[10000][2],long long int low, long long int mid, long long int high) 
{
	long long int l1, l2, i;



	for(l1 = low, l2 = mid + 1, i = low; l1 <= mid && l2 <= high; i++)
 {
		if(a[l1][0] <= a[l2][0])
		{
                	b[i][0] = a[l1][0];
                        b[i][1]=a[l1++][1];
                }


		else
		{
		 	b[i][0] = a[l2][0];
                        b[i][1]=a[l2++][1];
		}
	}

	while(l1 <= mid)    
	   {
		    b[i][0] = a[l1][0];
                    b[i++][1]=a[l1++][1];
            }

	while(l2 <= high)   
	{
	 	b[i][0] = a[l2][0];
                b[i++][1]=a[l2++][1];
         }



	for(i = low; i <= high; i++)
	{
	   	a[i][0] = b[i][0];
	   	a[i][1] = b[i][1];
	}
}

void sort(long long int a[10000][2],long long int low, long long int high)
 {
	long long int mid;

	if(low < high) 
{
		mid = (low + high) / 2;
		sort(a,low, mid);
		sort(a,mid+1, high);
		merging(a,low, mid, high);
	} else { 
		return;
	}   
}
